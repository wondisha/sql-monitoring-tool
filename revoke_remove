# Requires: Install-Module SqlServer

$centralConnStr = "Server=CentralServer;Database=abc;Integrated Security=True;TrustServerCertificate=True"

# 1. Get all expired, not-yet-revoked access requests
$expiredQuery = @"
SELECT tar.Username, tar.InstanceName, tar.DatabaseName, inst.InstanceAddress -- or whatever column gives you server address
FROM TempAccessRequests tar
JOIN dbo.instances inst ON tar.InstanceName = inst.InstanceName
WHERE tar.ExpiresAt <= GETDATE() AND tar.AccessRevoked = 0
"@
$expired = Invoke-Sqlcmd -ConnectionString $centralConnStr -Query $expiredQuery

foreach ($row in $expired) {
    # If you need to use a specific address/port, use $row.InstanceAddress, otherwise $row.InstanceName
    $targetConnStr = "Server=$($row.InstanceName);Database=$($row.DatabaseName);Integrated Security=True;TrustServerCertificate=True"
    try {
        # Revoke all roles for the user
        $revokeRoles = @"
DECLARE @sql NVARCHAR(MAX) = N'';
SELECT @sql = @sql + 'EXEC sp_droprolemember ''' + r.name + ''', ''' + u.name + ''';'
FROM sys.database_principals u
JOIN sys.database_role_members rm ON u.principal_id = rm.member_principal_id
JOIN sys.database_principals r ON rm.role_principal_id = r.principal_id
WHERE u.name = N'$($row.Username)';
IF LEN(@sql) > 0 EXEC sp_executesql @sql;
"@
        Invoke-Sqlcmd -ConnectionString $targetConnStr -Query $revokeRoles

        # Drop the user from the database
        $dropUser = "IF EXISTS (SELECT 1 FROM sys.database_principals WHERE name = N'$($row.Username)') DROP USER [$($row.Username)];"
        Invoke-Sqlcmd -ConnectionString $targetConnStr -Query $dropUser

        # Mark as revoked in central table
        $updateSql = "UPDATE TempAccessRequests SET AccessRevoked = 1 WHERE Username = '$($row.Username)' AND InstanceName = '$($row.InstanceName)' AND DatabaseName = '$($row.DatabaseName)' AND AccessRevoked = 0"
        Invoke-Sqlcmd -ConnectionString $centralConnStr -Query $updateSql
    } catch {
        Write-Host "Failed to revoke access and remove user $($row.Username) on $($row.InstanceName)\$($row.DatabaseName)"
    }
}
